@model  Model.Entity.Matricula
@{
    ViewData["Title"] = "Matricula";
}
<!-- BREADCRUMB -->
<nav class="clean container">
    <div class="nav-wrapper">
        <div class="col s12">
            <span class="left">
                <a href="@Url.Action("Index", "Principal")" class="breadcrumb">Principal</a>
                <a href="@Url.Action("Index", "Aluno")" class="breadcrumb"><strong>Matricula</strong></a>
            </span>
        </div>
    </div>
</nav>


<div class="row container">
    <div class="col s12 l12">
        <a href="#modalCadastrar" class="btn waves-effect waves-light modal-trigger right">Cadastrar Aluno</a>
    </div>
</div>

<div id="modalCadastrar" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h4 class="flow-text ">Cadastrar Aluno</h4>
        </div>
        <br /><br />
        <div class="col s12 l12">
            <div class="col s12 l12"><h4 class="flow-text subtitleModal">DADOS PESSOAIS</h4></div>
        </div>

        <br />

        <div class="col s12 l12">
            <form class="col s12 l12">

                <div class="input-field col s6">
                    <input placeholder="Ex: Ronaldo, Diego, Angela..." id="nome" type="text" class="validate">
                    <label for="nome">Nome do Aluno</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="dd/mm/aaaa" type="date" id="datadenascimento" class="validate">
                    <label for="datadenascimento">Data de Nascimento</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: 999.999.999-99" id="cpf" oninput="mascaraCPF(this)" type="text">
                    <label for="cpf">CPF</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: 99.999.999-9" id="rg" oninput="mascaraRG(this)" type="text">
                    <label for="rg">RG</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: 46361345, 84512574..." id="telefone" type="text" class="validate" maxlength="11">
                    <label for="telefone">Telefone</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: 08568520..." onblur="PesquisaCEP()" id="cep" oninput="mascaraCEP(this)" type="text" class="validate" maxlength="9">
                    <label for="cep">CEP</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: Av. Paulista..." id="endereco" type="text" class="validate" maxlength="45" disabled>
                    <label for="endereco">Endereco</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: 4300..." id="numero" type="number" class="validate" maxlength="5">
                    <label for="numero">Numero</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: Penha, Vila Leopoldina..." id="bairro" type="text" class="validate" maxlength="30" disabled>
                    <label for="bairro">Bairro</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: Poá, Suzano..." id="cidade" type="text" class="validate" maxlength="30" disabled>
                    <label for="cidade">Cidade</label>
                </div>

                <div class="input-field col s6">
                    <input placeholder="Ex: SP, MG..." id="estado" type="text" class="validate" disabled>
                    <label for="estado">Estado</label>
                </div>

                <div id="modalCadastroAluno" class="modal">
                    <div class="modal-content">
                        <h4 class="flow-text center">Aluno Cadastrado!</h4>
                        <p class="center">Clique em "SAIR" para voltar a página principal.</p>

                    </div>
                    <div class="modal-footer">
                        <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat" onclick="Adicionar()">sair</a>
                    </div>
                </div>
                <input id="idEditar" style="display: none;" />
            </form>
            <br /><br />
        </div>

        <div class="col s12 l12">

            <div class="col s12 l6">
                <h4 class="flow-text center subtitleModal" style="margin-top:25px;">TURMAS DISPONÍVEIS</h4>
            </div>
        </div>

        <table class="table highlight centered " id="tabelaAdicionar">
            <thead>
                <tr>
                    <th>Curso</th>
                    <th>Tipo</th>
                    <th>Alunos na Turma</th>
                    <th>Professor</th>
                    <th>Dia da Semana</th>
                    <th>Horário Inícial</th>
                    <th>Horário FInal</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.ListaMatriculaTurma.Count == 0)
                {
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                    </tr>
                }
                else
                {
                    foreach (var item in Model.ListaMatriculaTurma)
                    {
                        <tr>
                            <td class="left">
                                <label>
                                    <input type="checkbox" id="@item.Id" />
                                    <span>@item.Descricao</span>
                                </label>
                            </td>
                            <td>@item.Tipo</td>
                            <td>@item.Quantidade</td>
                            <td><strong>@item.Nome</strong></td>
                            <td>@item.DiaDaSemana</td>
                            <td>@item.HorarioInicial</td>
                            <td>@item.HorarioFinal</td>
                        </tr>
                    }
                }
            </tbody>
        </table>

    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close btn-flat" style="background-color:inherit; border:inherit; color: black">Fechar</a>
        <a class="waves-effect waves-light btn modal-trigger right btnCadastrar" onclick="Adicionar()">Cadastrar</a>
    </div>
</div>

<table class="table highlight centered container" id="tabelaAdicionar">
    <thead>
        <tr>
            <th class="teste">Nome</th>
            <th class="teste">Data de Nascimento</th>
            <th class="teste">RG</th>
            <th class="teste">CPF</th>
            <th class="teste">Endereço</th>
            <th class="teste">Numero</th>
            <th class="teste">Telefone</th>
            <th class="teste">Bairro</th>
            <th class="teste">Cidade</th>
            <th class="teste"></th>
        </tr>
    </thead>

    <div class="row container">
        <div class="center" id="centerPage"></div>
    </div>

    @if (Model.ListaMatricula.Count == 0)
    {
        <script>
            const attributes = document.getElementsByClassName('teste');
            const center = document.getElementById('centerPage')
            const img = document.createElement('img')
            img.src = '../../imgs/informa-naoharegistro.png';
            img.width = 400

            center.appendChild(img)

            for (var number = 0; number <= attributes.length; number++) {
                attributes[number].innerText = '';
            }

        </script>

    }
    else
    {
        foreach (var item in Model.ListaMatricula)
        {
            <tbody>
                <tr>
                    <td>@item.Nome</td>
                    <td>@item.DataNascimento.ToString("dd/MM/yyyy")</td>
                    <td>@item.RG</td>
                    <td>@item.CPF</td>
                    <td>@item.Endereco</td>
                    <td>@item.Numero</td>
                    <td>@item.Telefone</td>
                    <td>@item.Bairro</td>
                    <td>@item.Cidade</td>
                    <td>
                        <a class="btn-floating btn-sm waves-effect waves-light yellow modal-trigger" href="#modalEditar" onclick="EditarModal(@item.Id)"><i class="material-icons" style="background-color:#f79f00">create</i></a>
                        <a class="btn-floating btn-sm waves-effect waves-light red modal-trigger" href="#modalDeletar"
                           onclick="DeletarModal(@item.Id, '@item.Nome', '@item.RG', '@item.CPF')"><i class="material-icons">delete_forever</i></a>
                    </td>
                </tr>
            </tbody>
        }
    }

</table>

@Html.Partial("_Editar")

<div id="modalDeletar" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h4 id="deletarModalCabecalho"></h4>
        </div>

        <div class="col s12 l12">
            <div class="col s12 l4">
                <p class="center">
                    <strong style="font-weight:bold">Aluno</strong>
                    <br />
                    <label id="deletarModalNome">117979</label>
                </p>
            </div>
            <div class="col s12 l4">
                <p class="center">
                    <strong style="font-weight:bold">RG</strong>
                    <br />
                    <label id="deletarModalRG"></label>
                </p>
            </div>
            <div class="col s12 l4">
                <p class="center">
                    <strong style="font-weight:bold">CPF</strong>
                    <br />
                    <label id="deletarModalCPF"></label>
                </p>
            </div>
        </div>

    </div>
    <div class="modal-footer">
        <a href="#!" class="modal-close btn-flat" style="background-color:inherit; border:inherit; color: black">Fechar</a>
        <a class="waves-effect waves-light btn modal-trigger right btnCadastrar" onclick="Deletar()">Sim, deletar</a>
    </div>
</div>

@section scripts{
    <script>
        let valorId;
        let valorNome;
        let valorRG;
        let valorCPF;
        let valorEndereco;
        let valorNumero;
        let valorCep;
        let valorTelefone;
        let valorBairro;
        let valorCidade;
        let valorEstado;
        let valorDataNascimento;
        $(document).ready(function () {
            $('#tabelaAdicionar').DataTable();
            $('#tabelaEditar').DataTable();
        });

        function mascaraCPF(i) {

            var v = i.value;

            if (isNaN(v[v.length - 1])) { // impede entrar outro caractere que não seja número
                i.value = v.substring(0, v.length - 1);
                return;
            }

            i.setAttribute("maxlength", "14");
            if (v.length == 3 || v.length == 7) i.value += ".";
            if (v.length == 11) i.value += "-";

        }

        function mascaraRG(i) {
            var v = i.value;
            if (isNaN(v[v.length - 1])) { // impede entrar outro caractere que não seja número
                i.value = v.substring(0, v.length - 1);
                return;
            }

            i.setAttribute("maxlength", "12");
            if (v.length == 2 || v.length == 6) i.value += ".";
            if (v.length == 10) i.value += "-";
        }
        function mascaraCEP(i) {
            var v = i.value;
            if (isNaN(v[v.length - 1])) { // impede entrar outro caractere que não seja número
                i.value = v.substring(0, v.length - 1);
                return;
            }
            i.setAttribute("maxlength", "9");
            if (v.length == 5) i.value += "-";
        }

        function PesquisaCEP() {
        let cep = document.getElementById('cep').value;
            $(function () {
                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "@Url.Action("BuscaCep", "Matricula")",
                    data: { cep: cep },
                    success: function (dados) {
                    document.getElementById('bairro').value = dados.Bairro;
                        document.getElementById('endereco').value = dados.Endereco ;
                        document.getElementById('cidade').value = dados.Cidade ;
                        document.getElementById('estado').value = dados.Estado ;
                    }
                })
            });
        }

        function PesquisaCEPEditar() {
        let cep = document.getElementById('cepEditar').value;
            $(function () {
                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "@Url.Action("BuscaCep", "Matricula")",
                    data: { cep: cep },
                    success: function (dados) {
                    document.getElementById('bairroEditar').value = dados.Bairro;
                        document.getElementById('enderecoEditar').value = dados.Endereco ;
                        document.getElementById('cidadeEditar').value = dados.Cidade ;
                        document.getElementById('estadoEditar').value = dados.Estado ;
                    }
                })
            });
        }


        function Adicionar() {
            let array = [];
            try {
                var table = document.getElementById("tabelaAdicionar");
                var rows = table.getElementsByTagName('tr');

                for (var ica = 1; ica < rows.length; ica++) {
                    var cols = rows[ica].getElementsByTagName('td');
                    var value = cols[0].getElementsByTagName('input')[0];
                    if (value.checked === true) {
                        array.push(value.id)
                    }
                }
            }
            catch (e) {
                //alert(e);
            }
                    var aluno = {
                        Nome: document.getElementById("nome").value,
                        DataNascimento: document.getElementById("datadenascimento").value,
                        RG: document.getElementById("rg").value,
                        CPF: document.getElementById("cpf").value,
                        Telefone: document.getElementById("telefone").value,
                        Endereco: document.getElementById("endereco").value,
                        Numero: document.getElementById("numero").value,
                        CEP: document.getElementById("cep").value,
                        Bairro: document.getElementById("bairro").value,
                        Cidade: document.getElementById("cidade").value,
                        Estado: document.getElementById("estado").value,
                        Array: array
                    };
                 $.ajax({
                     dataType: "json",
                     type: "POST",
                     url: "@Url.Action("Adicionar","Matricula")",
                     data: { entity: aluno},
                     success: function (dados) {
                         switch (dados) {
                             case "Preenchimento obrigatório":
                                 M.toast({ html: dados, classes: 'rounded orange' });
                                 break;
                             case true:
                                 M.toast({ html: 'Salvo com sucesso!!!', classes: 'rounded green', completeCallback: function(){window.location.reload()} });
                                 break;
                             case false:
                                 M.toast({ html: 'Já existe essas informações no sistema.', classes: 'rounded red' });
                             default:
                         }
                }
            });
        }
        function Deletar() {
            var entity = {
                Id: valorId
        };
                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "@Url.Action("Deletar","Matricula")",
                    data: { entity: entity},
                    success: function (dados) {
                        switch (dados) {
                            case "Preenchimento obrigatório":
                            M.toast({ html: dados, classes: 'rounded orange' });
                            break;
                            case true:
                            M.toast({ html: 'Deletado com sucesso!!!', classes: 'rounded green', completeCallback: function(){window.location.reload()} });
                            break;
                            default:
                        }
                    }
            });
        }
        function DeletarModal(id, nome, rg, cpf) {
                valorId = id;
                document.getElementById('deletarModalRG').innerHTML = rg;
                document.getElementById('deletarModalNome').innerHTML = nome;
                document.getElementById('deletarModalCPF').innerHTML = cpf;
                document.getElementById('deletarModalCabecalho').innerText = 'Tem certeza que deseja deletar o aluno ' + nome + '?';
        }

        function EditarModal(id) {
            $.ajax({
                     dataType: "json",
                     type: "POST",
                     url: "@Url.Action("ModalEditar", "Matricula")",
                data: { id: id },
                success: function (result) {
                    document.getElementById('tituloAlunoEditar').innerText = 'Editar Aluno ' + result.DadosMatriculaTurma.Nome;
                    document.getElementById('nomeEditar').value = result.DadosMatriculaTurma.Nome;
                    document.getElementById('datadenascimentoEditar').value = result.DadosMatriculaTurma.DataNascimento.substring(0, 10);
                    document.getElementById('cpfEditar').value = result.DadosMatriculaTurma.CPF;
                    document.getElementById('rgEditar').value = result.DadosMatriculaTurma.RG;
                    document.getElementById('telefoneEditar').value = result.DadosMatriculaTurma.Telefone;
                    document.getElementById('cepEditar').value = result.DadosMatriculaTurma.CEP;
                    document.getElementById('enderecoEditar').value = result.DadosMatriculaTurma.Endereco;
                    document.getElementById('numeroEditar').value = result.DadosMatriculaTurma.Numero;
                    document.getElementById('bairroEditar').value = result.DadosMatriculaTurma.Bairro;
                    document.getElementById('cidadeEditar').value = result.DadosMatriculaTurma.Cidade;
                    document.getElementById('estadoEditar').value = result.DadosMatriculaTurma.Estado;


                    valorId = id;
                    valorNome = result.DadosMatriculaTurma.Nome;
                    valorDataNascimento = result.DadosMatriculaTurma.DataNascimento;
                    valorRG = result.DadosMatriculaTurma.RG;
                    valorCPF = result.DadosMatriculaTurma.CPF;
                    valorEndereco = result.DadosMatriculaTurma.Endereco;
                    valorNumero = result.DadosMatriculaTurma.Numero;
                    valorCep = result.DadosMatriculaTurma.CEP;
                    valorTelefone = result.DadosMatriculaTurma.Telefone;
                    valorBairro = result.DadosMatriculaTurma.Bairro;
                    valorCidade = result.DadosMatriculaTurma.Cidade;
                    valorEstado = result.DadosMatriculaTurma.Estado;


                }
            });
               $.ajax({
                   type: "POST",
                   url: "@Url.Action("Tabela", "Matricula")",
                   data: { id: id },
                   success: function (data) {
                       //Coloque aqui o local onde a View deverá ocupar
                       $(data).each(function () {
                           if (this.Ativo === true) {
                               $("#Grid").append("<tr><td class='left'><label><input type='checkbox'  id='" + this.Id + "' checked='checked'/><span>" + this.Descricao + "</span></label></td><td>" + this.Tipo + "</td><td>" + this.Colaborador + "</td> <td>" + this.DiaDaSemana + "</td><td>" + this.HorarioInicial + "</td> <td>" + this.HorarioFinal + "</td>  </tr>");
                           } else {
                               $("#Grid").append("<tr><td class='left'><label><input type='checkbox' id='" + this.Id + "'/><span>" + this.Descricao + "</span></label></td><td>" + this.Tipo + "</td><td>" + this.Colaborador + "</td> <td>" + this.DiaDaSemana + "</td><td>" + this.HorarioInicial + "</td> <td>" + this.HorarioFinal + "</td>  </tr>");
                           }
                        });
                   },
                   error: function (ex) {
                       alert("Erro: " + ex.status);
                   }
               });
        }

        function Editar(){
            let arrayEditar = [];
            try {
                var table = document.getElementById("tabelaNova");
                var rows = table.getElementsByTagName('tr');

                for (var ica = 1; ica < rows.length; ica++) {
                    var cols = rows[ica].getElementsByTagName('td');
                    var value = cols[0].getElementsByTagName('input')[0];
                    if (value.checked === true) {
                        arrayEditar.push(value.id)
                    }
                }
            }
            catch (e) {
                //alert(e);
            }
            var aluno = {
               Id : valorId,
                Nome: valorNome,
                DataNascimento: valorDataNascimento,
                RG: valorRG,
                CPF: valorCPF,
                Endereco: valorEndereco,
                Numero: valorNumero,
                CEP: valorCep,
                Telefone: valorTelefone,
               Bairro: valorBairro,
                Cidade: valorCidade,
                Estado: valorEstado
            }
            var alunoEditar = {
                Id: valorId,
                Nome: document.getElementById('nomeEditar').value,
                DataNascimento: document.getElementById('datadenascimentoEditar').value,
                RG: document.getElementById('rgEditar').value,
                CPF: document.getElementById('cpfEditar').value,
                Endereco: document.getElementById('enderecoEditar').value,
                Numero: document.getElementById('numeroEditar').value,
                CEP: document.getElementById('cepEditar').value,
                Telefone: document.getElementById('telefoneEditar').value,
                Bairro: document.getElementById('bairroEditar').value,
                Cidade: document.getElementById('cidadeEditar').value,
                Estado: document.getElementById('estadoEditar').value,
                Array: arrayEditar
            }
            $.ajax({
                     dataType: "json",
                     type: "POST",
                     url: "@Url.Action("Editar","Matricula")",
                     data: { entity: aluno, entityEditar: alunoEditar},
                     success: function (dados) {
                         switch (dados) {
                             case "Preenchimento obrigatório":
                                 M.toast({ html: dados, classes: 'rounded orange' });
                                 break;
                             case true:
                                 M.toast({ html: 'Salvo com sucesso!!!', classes: 'rounded green', completeCallback: function(){window.location.reload()} });
                                 break;
                             case false:
                                 M.toast({ html: 'Já existe essas informações no sistema.', classes: 'rounded red' });
                             default:
                         }
                }
            });
        }
    </script>
}