@model  Model.Entity.Matricula
@{
    ViewData["Title"] = "Matricula";
}
<!-- BREADCRUMB -->
<nav class="clean container">
    <div class="nav-wrapper">
        <div class="col s12">
            <span class="left">
                <a id="paginaPrincipal" href="@Url.Action("Index", "Principal")" class="breadcrumb">Principal</a>
                <a id="paginaAluno" href="@Url.Action("Index", "Aluno")" class="breadcrumb"><strong>Matricula</strong></a>
            </span>
        </div>
    </div>
</nav>


<div class="row container">
    <div class="col s12 l12">
        <a id="cadastrarAluno" href="#modalCadastrar" class="btn waves-effect waves-light modal-trigger right">Cadastrar Aluno</a>
    </div>
</div>

@Html.Partial("_Cadastrar")

<div style="padding: 20px">

    <table id="tabelaPrincipal">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Data de Nascimento</th>
                <th>E-mail</th>
                <th>RG</th>
                <th>CPF</th>
                <th>Endereço</th>
                <th>Numero</th>
                <th>Telefone</th>
                <th>Bairro</th>
                <th>Cidade</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.ListaMatriculaTurma.Count == 0)
            {
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            }
            else
            {
                foreach (var item in Model.ListaMatricula)
                {
                    <tr>
                        <td>@item.Nome</td>
                        <td>@item.DataNascimento.ToString("dd/MM/yyyy")</td>
                        <td>@item.Email</td>
                        <td>@item.RG</td>
                        <td>@item.CPF</td>
                        <td>@item.Endereco</td>
                        <td>@item.Numero</td>
                        <td>@item.Telefone</td>
                        <td>@item.Bairro</td>
                        <td>@item.Cidade</td>
                        <td>
                            <a id="editarMatricula" class="btn-floating btn-sm waves-effect waves-light yellow modal-trigger" href="#modalEditar" onclick="EditarModal(@item.Id)"><i class="material-icons" style="background-color:#f79f00">create</i></a>
                            <a id="fecharMatricula" class="btn-floating btn-sm waves-effect waves-light red modal-trigger" href="#modalDeletar"
                               onclick="DeletarModal(@item.Id, '@item.Nome', '@item.RG', '@item.CPF')"><i class="material-icons">delete_forever</i></a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>



@Html.Partial("_Editar")
@Html.Partial("_Deletar")



@section scripts{
    <script>
        let valorId;
        let valorNome;
        let valorRG;
        let valorCPF;
        let valorEndereco;
        let valorNumero;
        let valorCep;
        let valorTelefone;
        let valorBairro;
        let valorCidade;
        let valorEstado;
        let valorDataNascimento;
        let valorEmail;

        $(document).ready(function () {
            $('#tabelaAdicionar').dataTable();
            $('#tabelaPrincipal').dataTable();
        });



        function mascaraCPF(i) {
            var v = i.value;
            if (isNaN(v[v.length - 1])) { // impede entrar outro caractere que não seja número
                i.value = v.substring(0, v.length - 1);
                return;
            }
            i.setAttribute("maxlength", "14");
            if (v.length == 3 || v.length == 7) i.value += ".";
            if (v.length == 11) i.value += "-";
        }

        function mascaraRG(i) {
            var v = i.value;
            if (isNaN(v[v.length - 1])) { // impede entrar outro caractere que não seja número
                i.value = v.substring(0, v.length - 1);
                return;
            }

            i.setAttribute("maxlength", "12");
            if (v.length == 2 || v.length == 6) i.value += ".";
            if (v.length == 10) i.value += "-";
        }

        function mascaraCEP(i) {
            var v = i.value;
            if (isNaN(v[v.length - 1])) { // impede entrar outro caractere que não seja número
                i.value = v.substring(0, v.length - 1);
                return;
            }
            i.setAttribute("maxlength", "9");
            if (v.length == 5) i.value += "-";
        }

        function PesquisaCEP() {
        let cep = document.getElementById('cep').value;
            $(function () {
                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "@Url.Action("BuscaCep", "Matricula")",
                    data: { cep: cep },
                    success: function (dados) {
                    document.getElementById('bairro').value = dados.Bairro;
                        document.getElementById('endereco').value = dados.Endereco ;
                        document.getElementById('cidade').value = dados.Cidade ;
                        document.getElementById('estado').value = dados.Estado ;
                    }
                })
            });
        }

        function PesquisaCEPEditar() {
        let cep = document.getElementById('cepEditar').value;
            $(function () {
                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "@Url.Action("BuscaCep", "Matricula")",
                    data: { cep: cep },
                    success: function (dados) {
                    document.getElementById('bairroEditar').value = dados.Bairro;
                        document.getElementById('enderecoEditar').value = dados.Endereco ;
                        document.getElementById('cidadeEditar').value = dados.Cidade ;
                        document.getElementById('estadoEditar').value = dados.Estado ;
                    }
                })
            });
        }

        function Adicionar() {
            let array = [];
            try {
                var table = document.getElementById("tabelaAdicionar");
                var rows = table.getElementsByTagName('tr');

                for (var ica = 1; ica < rows.length; ica++) {
                    var cols = rows[ica].getElementsByTagName('td');
                    var value = cols[0].getElementsByTagName('input')[0];
                    if (value.checked === true) {
                        array.push(value.id)
                    }
                }
            }
            catch (e) {
                //alert(e);
            }
                    var aluno = {
                        Nome: document.getElementById("nome").value,
                        DataNascimento: document.getElementById("datadenascimento").value,
                        RG: document.getElementById("rg").value,
                        CPF: document.getElementById("cpf").value,
                        Telefone: document.getElementById("telefone").value,
                        Endereco: document.getElementById("endereco").value,
                        Numero: document.getElementById("numero").value,
                        CEP: document.getElementById("cep").value,
                        Bairro: document.getElementById("bairro").value,
                        Cidade: document.getElementById("cidade").value,
                        Estado: document.getElementById("estado").value,
                        Email: document.getElementById("email").value,
                        Array: array
                    };
                 $.ajax({
                     dataType: "json",
                     type: "POST",
                     url: "@Url.Action("Adicionar","Matricula")",
                     data: { entity: aluno},
                     success: function (dados) {
                         switch (dados) {
                             case "Preenchimento obrigatório":
                                 M.toast({ html: dados, classes: 'rounded orange' });
                                 break;
                             case true:
                                 M.toast({ html: 'Salvo com sucesso!!!', classes: 'rounded green', completeCallback: function(){window.location.reload()} });
                                 break;
                             case false:
                                 M.toast({ html: 'Já existe essas informações no sistema.', classes: 'rounded red' });
                             default:
                         }
                }
            });
        }

        function Deletar() {
            var entity = {
                Id: valorId
        };
                $.ajax({
                    dataType: "json",
                    type: "POST",
                    url: "@Url.Action("Deletar","Matricula")",
                    data: { entity: entity},
                    success: function (dados) {
                        switch (dados) {
                            case "Preenchimento obrigatório":
                            M.toast({ html: dados, classes: 'rounded orange' });
                            break;
                            case true:
                            M.toast({ html: 'Deletado com sucesso!!!', classes: 'rounded green', completeCallback: function(){window.location.reload()} });
                            break;
                            default:
                        }
                    }
            });
        }

        function DeletarModal(id, nome, rg, cpf) {
                valorId = id;
                document.getElementById('deletarModalRG').innerHTML = rg;
                document.getElementById('deletarModalNome').innerHTML = nome;
                document.getElementById('deletarModalCPF').innerHTML = cpf;
                document.getElementById('deletarModalCabecalho').innerText = 'Tem certeza que deseja deletar o aluno ' + nome + '?';
        }

        function EditarModal(id) {
            $.ajax({
                     dataType: "json",
                     type: "POST",
                     url: "@Url.Action("ModalEditar", "Matricula")",
                data: { id: id },
                success: function (result) {
                    document.getElementById('tituloAlunoEditar').innerText = 'Editar Aluno ' + result.DadosMatriculaTurma.Nome;
                    document.getElementById('nomeEditar').value = result.DadosMatriculaTurma.Nome;
                    document.getElementById('datadenascimentoEditar').value = result.DadosMatriculaTurma.DataNascimento.substring(0, 10);
                    document.getElementById('cpfEditar').value = result.DadosMatriculaTurma.CPF;
                    document.getElementById('rgEditar').value = result.DadosMatriculaTurma.RG;
                    document.getElementById('telefoneEditar').value = result.DadosMatriculaTurma.Telefone;
                    document.getElementById('cepEditar').value = result.DadosMatriculaTurma.CEP;
                    document.getElementById('enderecoEditar').value = result.DadosMatriculaTurma.Endereco;
                    document.getElementById('numeroEditar').value = result.DadosMatriculaTurma.Numero;
                    document.getElementById('bairroEditar').value = result.DadosMatriculaTurma.Bairro;
                    document.getElementById('cidadeEditar').value = result.DadosMatriculaTurma.Cidade;
                    document.getElementById('estadoEditar').value = result.DadosMatriculaTurma.Estado;
                    document.getElementById('emailEditar').value = result.DadosMatriculaTurma.Email;


                    valorId = id;
                    valorNome = result.DadosMatriculaTurma.Nome;
                    valorDataNascimento = result.DadosMatriculaTurma.DataNascimento;
                    valorRG = result.DadosMatriculaTurma.RG;
                    valorCPF = result.DadosMatriculaTurma.CPF;
                    valorEndereco = result.DadosMatriculaTurma.Endereco;
                    valorNumero = result.DadosMatriculaTurma.Numero;
                    valorCep = result.DadosMatriculaTurma.CEP;
                    valorTelefone = result.DadosMatriculaTurma.Telefone;
                    valorBairro = result.DadosMatriculaTurma.Bairro;
                    valorCidade = result.DadosMatriculaTurma.Cidade;
                    valorEstado = result.DadosMatriculaTurma.Estado;
                    valorEmail = result.DadosMatriculaTurma.Email;


                }
            });
               $.ajax({
                   type: "POST",
                   url: "@Url.Action("Tabela", "Matricula")",
                   data: { id: id },
                   success: function (data) {
                       //Coloque aqui o local onde a View deverá ocupar
                       $("#Grid tr").remove();
                       $(data).each(function () {
                           if (this.Ativo === true) {
                               $("#Grid").append("<tr><td class='left'><label><input type='checkbox'  id='" + this.Id + "' checked='checked'/><span>" + this.Descricao + "</span></label></td><td>" + this.Tipo + "</td><td>" + this.Colaborador + "</td> <td>" + this.DiaDaSemana + "</td><td>" + this.HorarioInicial + "</td> <td>" + this.HorarioFinal + "</td>  </tr>");
                           } else {
                               $("#Grid").append("<tr><td class='left'><label><input type='checkbox' id='" + this.Id + "'/><span>" + this.Descricao + "</span></label></td><td>" + this.Tipo + "</td><td>" + this.Colaborador + "</td> <td>" + this.DiaDaSemana + "</td><td>" + this.HorarioInicial + "</td> <td>" + this.HorarioFinal + "</td>  </tr>");
                           }
                        });
                   },
                   error: function (ex) {
                       alert("Erro: " + ex.status);
                   }
               });
        }

        function Editar(){
            let arrayEditar = [];
            try {
                var table = document.getElementById("tabelaNova");
                var rows = table.getElementsByTagName('tr');

                for (var ica = 1; ica < rows.length; ica++) {
                    var cols = rows[ica].getElementsByTagName('td');
                    var value = cols[0].getElementsByTagName('input')[0];
                    if (value.checked === true) {
                        arrayEditar.push(value.id)
                    }
                }
            }
            catch (e) {
                //alert(e);
            }
            var aluno = {
               Id : valorId,
                Nome: valorNome,
                DataNascimento: valorDataNascimento,
                RG: valorRG,
                CPF: valorCPF,
                Endereco: valorEndereco,
                Numero: valorNumero,
                CEP: valorCep,
                Telefone: valorTelefone,
               Bairro: valorBairro,
                Cidade: valorCidade,
                Estado: valorEstado,
                Email: valorEmail
            }
            var alunoEditar = {
                Id: valorId,
                Nome: document.getElementById('nomeEditar').value,
                DataNascimento: document.getElementById('datadenascimentoEditar').value,
                RG: document.getElementById('rgEditar').value,
                CPF: document.getElementById('cpfEditar').value,
                Endereco: document.getElementById('enderecoEditar').value,
                Numero: document.getElementById('numeroEditar').value,
                CEP: document.getElementById('cepEditar').value,
                Telefone: document.getElementById('telefoneEditar').value,
                Bairro: document.getElementById('bairroEditar').value,
                Cidade: document.getElementById('cidadeEditar').value,
                Estado: document.getElementById('estadoEditar').value,
                Email: document.getElementById('emailEditar').value,
                Array: arrayEditar
            }
            $.ajax({
                     dataType: "json",
                     type: "POST",
                     url: "@Url.Action("Editar","Matricula")",
                     data: { entity: aluno, entityEditar: alunoEditar},
                     success: function (dados) {
                         switch (dados) {
                             case "Preenchimento obrigatório":
                                 M.toast({ html: dados, classes: 'rounded orange' });
                                 break;
                             case true:
                                 M.toast({ html: 'Salvo com sucesso!!!', classes: 'rounded green', completeCallback: function(){window.location.reload()} });
                                 break;
                             case false:
                                 M.toast({ html: 'Já existe essas informações no sistema.', classes: 'rounded red' });
                             default:
                         }
                }
            });
        }
    </script>
}